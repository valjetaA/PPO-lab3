# name of the workprocess
name: Deploy Next.js site to Pages

# События, запусакющие рабочий процесс
on:
  # Запуск при пушах в основную ветку (main)
  push:
    branches: ["main"]

  # Возможность запуска вручную из вкладки Actions
  workflow_dispatch:

# Настройка разрешени для токена GITHUB_TOKEN 
permissions:
  contents: read # на чтение содержимого репозитория
  pages: write # на запись на GitHub Pages
  id-token: write # на запись токена идентификации

# Управление параллельностью выполнения рабочих процессов
concurrency:
  group: "pages" # группа паралеллельности
  cancel-in-progress: false # не отпменять выполняющиеся процессы

# Определение задач
jobs:
  # Задание сборки
  build:
    runs-on: ubuntu-latest
    steps:
      # Клонирование репозитория
      - name: Checkout
        uses: actions/checkout@v4
      # Определение менеджера пакетов
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      # Установка Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      # Настройка Pages для Next.js
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      # Восстановление кэша
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      # Установка зависимостей
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      # Сборка проекта Next.js
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      # Загрузка артефакта сборки
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Задание развертывания
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
